{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf400
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red53\green53\blue53;}
{\*\expandedcolortbl;;\cssrgb\c27059\c27059\c27059;}
\margl1440\margr1440\vieww14460\viewh11740\viewkind0
\deftab560
\pard\pardeftab560\slleading20\partightenfactor0

\f0\fs28 \cf2 \
\

\b\fs32 \cf0 ASSIGNMENT 3 - 125 points\

\b0\fs28 \cf2 \
In this project, you will create a form that an app could use to register a new user. Your project should use the MVC pattern by having a separate file containing a Model class.\
\

\b \cf0 User Interface\

\b0 \cf2 \
\pard\pardeftab560\partightenfactor0
\cf2 1) The user interface should have 
\b \cf0 UITextFields
\b0 \cf2  for name, email address, password, and phone number. The keyboard should properly resign/dismiss when pressing Done/Return on each text field.\
\
2) Use 
\b \cf0 UILabels
\b0 \cf2  to serve as titles of the text fields, so the user knows what to enter in which field.\
\
3) There should be 
\b \cf0 placeholder text
\b0 \cf2  in each text field.\
\
4) 
\b \cf0 Secure text entry
\b0 \cf2  must be used on the 
\b \cf0 password
\b0 \cf2  text field.\
\
5) A 
\b \cf0 suitable
\b0 \cf2  
\b \cf0 type of keyboard
\b0 \cf2  should be used for each of the text fields respectively.\
\
6) There should be an 
\b \cf0 Add
\b0 \cf2  
\b \cf0 button
\b0 \cf2  on the form which will create the user and reset the form.\
\
7) There should be a 
\b \cf0 Reset
\b0 \cf2  button on the form which will clear all the current values from the text fields. Any already added users in the model should remain (so the text view in #8 should keep its state).\
\
\pard\pardeftab720\partightenfactor0
\cf2 8) Research 
\b \cf0 UITextView
\b0 \cf2 , a new component that we have not gone over in class. Place a text view at the bottom of the screen and disable editing on it. As each user is added from the form, their name should appear on a row in the text view.\
\
\pard\pardeftab560\partightenfactor0
\cf2 9) A 
\b \cf0 UIImageView
\b0 \cf2  with an image (stored in Assets.xcassets) must be present on the screen. It could be like an app logo or icon or background image. (It can be whatever you want/can find. I'd really recommend using some sort of vector image.)\
\pard\pardeftab560\slleading20\partightenfactor0
\cf2 \

\b \cf0 \
Model & Validation
\b0 \cf2 \
\
\pard\pardeftab720\sl360\sa240\partightenfactor0
\cf2 1) The 
\b \cf0 password
\b0 \cf2  must be at least 7 characters to be valid input, and the 
\b \cf0 phone number
\b0 \cf2  must be at least 10 characters. 
\b \cf0 All other text fields
\b0 \cf2  must have at least 3 characters to be valid input.\
2) The 
\b \cf0 phone number
\b0 \cf2  must only contain numeric characters (you can accomplish this through a variety of means) to be valid input.\
3) The 
\b \cf0 Add button
\b0 \cf2  should only be enabled if all the current input is valid. \
4) You are not required to do any other input validation, though you may do so for extra credit (see below).\
\

\b \cf0 Other Notes
\b0 \cf2 \
\pard\pardeftab560\slleading20\partightenfactor0
\cf2 1) Remember: Put 
\b \cf0 problem/domain logic in your Model
\b0 \cf2  (e.g. validating input, storing current form values, adding new user, resetting the form), and put 
\b \cf0 presentation logic in your View Controller
\b0 \cf2  (e.g. enabling buttons, clearing text fields).\
\
2) When using delegation with UIKit components, make your View Controller the delegate.\
\
3) You are NOT required to use Auto Layout for this project. Design for the iPhone 8 Simulator.\
\
4) See the 
\b \cf0 Screenshots folder
\b0 \cf2  for what the basic interface could look like at various points. You can design your interface to look differently as long as the functionality meets the requirements.\
\
\

\b \cf0 Extra Credit
\b0 \cf2 \
\
Up to 10 points of extra credit are available for this project. Here are some ideas of things you could do. Be sure to describe the extra credit in the Comments field in Canvas!\
\
1) Use Auto Layout for the interface - 5 points\
\
2) Validate that the email and phone number are 
\i \cf0 actually
\i0 \cf2  valid using a regular expression or some other approach - 5 points\
\
3) Provide some kind of immediate feedback on each text field (checkbox, red x, etc) that lets the user know which field has invalid data - 5 points\
\
4) You could also make the input more efficient by forwarding the user to the next text field when they hit Return instead of closing the keyboard. - 5 points\
\
\
\
\
\
\
}